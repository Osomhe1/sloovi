{"ast":null,"code":"import { createSlice, createAsyncThunk, unwrapResult } from '@reduxjs/toolkit';\nimport { REQUEST_STATUS } from '../constants';\nimport axios from 'axios';\nconst updateTask = createAsyncThunk('post/addTask', async payload => {\n  console.log(payload);\n  const {\n    data\n  } = await axios.put(` https://stage.api.sloovi.com/task/lead_465c14d0e99e4972b6b21ffecf3dd691/${payload.taskID}?company_id=${payload.companyID}`, payload.body, {\n    headers: {\n      Authorization: 'Bearer ' + payload.token,\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n    }\n  }).then(res => {\n    console.log(res);\n    return res;\n  }).catch(err => {\n    console.log(err.response);\n    return err.data;\n  });\n  return data;\n});\nconst initialState = {\n  userData: {},\n  loading: false,\n  status: 'idle',\n  error: {}\n};\nconst editTask = createSlice({\n  name: 'xMartLogin',\n  initialState,\n  keepUnusedDataFor: 2,\n  extraReducers: {\n    [updateTask.pending]: state => {\n      state.status = REQUEST_STATUS.PENDING;\n      state.loading = true;\n    },\n    [updateTask.fulfilled]: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.status = REQUEST_STATUS.FULFILLED;\n      state.userData = payload;\n      state.loading = false;\n    },\n    [updateTask.rejected]: (state, error) => {\n      state.status = REQUEST_STATUS.REJECTED;\n      state.error = error;\n    }\n  }\n});\nexport const {\n  setUsers,\n  wasGoing\n} = editTask.actions; // export states\n\nexport default editTask.reducer;\nexport { editTask };\n/*\n\n\n\n\n\n*/\n\nexport const updateTaskHandler = (dispatch, info) => {\n  console.log(info);\n  const payload = {\n    token: info.token,\n    companyID: info.companyID,\n    body: info.body,\n    taskID: info.taskID\n  };\n  dispatch(updateTask(payload)).then(unwrapResult).then(res => {\n    console.log(res.results);\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const convert2sec = str => {\n  const exactTime = str.toString().split('2022')[1].split('G')[0];\n  let myTime = exactTime.split(':');\n  let TimeInSec = myTime[0] * 60 * 60 + myTime[1] * 60 + myTime[2];\n  return parseInt(TimeInSec);\n};","map":{"version":3,"names":["createSlice","createAsyncThunk","unwrapResult","REQUEST_STATUS","axios","updateTask","payload","console","log","data","put","taskID","companyID","body","headers","Authorization","token","Accept","then","res","catch","err","response","initialState","userData","loading","status","error","editTask","name","keepUnusedDataFor","extraReducers","pending","state","PENDING","fulfilled","FULFILLED","rejected","REJECTED","setUsers","wasGoing","actions","reducer","updateTaskHandler","dispatch","info","results","convert2sec","str","exactTime","toString","split","myTime","TimeInSec","parseInt"],"sources":["C:/Users/OSIOKE/Downloads/Sloovi/Sloovi - Copy/src/state/slices/action/Update.js"],"sourcesContent":["import { createSlice, createAsyncThunk, unwrapResult } from '@reduxjs/toolkit';\nimport { REQUEST_STATUS } from '../constants';\nimport axios from 'axios';\n\nconst updateTask = createAsyncThunk('post/addTask', async (payload) => {\n    console.log(payload);\n    const { data } = await axios\n        .put(\n            ` https://stage.api.sloovi.com/task/lead_465c14d0e99e4972b6b21ffecf3dd691/${payload.taskID}?company_id=${payload.companyID}`,\n\n            payload.body,\n            {\n                headers: {\n                    Authorization: 'Bearer ' + payload.token,\n                    'Content-Type': 'application/json',\n                    Accept: 'application/json',\n                },\n            }\n        )\n        .then((res) => {\n            console.log(res);\n            return res;\n        })\n        .catch((err) => {\n            console.log(err.response);\n            return err.data;\n        });\n\n    return data;\n});\n\nconst initialState = {\n    userData: {},\n    loading: false,\n    status: 'idle',\n    error: {},\n};\n\nconst editTask = createSlice({\n    name: 'xMartLogin',\n    initialState,\n    keepUnusedDataFor: 2,\n    extraReducers: {\n        [updateTask.pending]: (state) => {\n            state.status = REQUEST_STATUS.PENDING;\n            state.loading = true;\n        },\n        [updateTask.fulfilled]: (state, { payload }) => {\n            state.status = REQUEST_STATUS.FULFILLED;\n            state.userData = payload;\n            state.loading = false;\n        },\n        [updateTask.rejected]: (state, error) => {\n            state.status = REQUEST_STATUS.REJECTED;\n            state.error = error;\n        },\n    },\n});\n\nexport const { setUsers, wasGoing } = editTask.actions;\n\n// export states\nexport default editTask.reducer;\nexport { editTask };\n\n/*\n\n\n\n\n\n*/\n\nexport const updateTaskHandler = (dispatch, info) => {\n    console.log(info);\n    const payload = {\n        token: info.token,\n        companyID: info.companyID,\n        body: info.body,\n        taskID: info.taskID,\n    };\n    dispatch(updateTask(payload))\n        .then(unwrapResult)\n        .then((res) => {\n            console.log(res.results);\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n};\n\nexport const convert2sec = (str) => {\n    const exactTime = str.toString().split('2022')[1].split('G')[0];\n    let myTime = exactTime.split(':');\n    let TimeInSec = myTime[0] * 60 * 60 + myTime[1] * 60 + myTime[2];\n\n    return parseInt(TimeInSec);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}