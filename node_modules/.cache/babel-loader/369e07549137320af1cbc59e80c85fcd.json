{"ast":null,"code":"import { createSlice, createAsyncThunk, unwrapResult } from '@reduxjs/toolkit';\nimport { REQUEST_STATUS } from '../constants';\nimport { Message, toaster } from 'rsuite';\nimport axios from 'axios';\nconst addTask = createAsyncThunk('post/addTask', async payload => {\n  console.log(payload);\n  const {\n    data\n  } = await axios.post(`https://stage.api.sloovi.com/task/lead_465c14d0e99e4972b6b21ffecf3dd691?company_id=${payload.companyID}`, payload.body, {\n    headers: {\n      Authorization: 'Bearer ' + payload.token,\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n    }\n  }).then(res => {\n    console.log(res);\n    return res;\n  }).catch(err => {\n    console.log(err.response);\n    return err.data;\n  });\n  return data;\n});\nconst initialState = {\n  userData: {},\n  loading: false,\n  status: 'idle',\n  error: {}\n};\nconst newTask = createSlice({\n  name: 'xMartLogin',\n  initialState,\n  keepUnusedDataFor: 2,\n  extraReducers: {\n    [addTask.pending]: state => {\n      state.status = REQUEST_STATUS.PENDING;\n      state.loading = true;\n    },\n    [addTask.fulfilled]: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.status = REQUEST_STATUS.FULFILLED;\n      state.userData = payload;\n      state.loading = false;\n    },\n    [addTask.rejected]: (state, error) => {\n      state.status = REQUEST_STATUS.REJECTED;\n      state.error = error;\n    }\n  }\n});\nexport const {\n  setUsers,\n  wasGoing\n} = newTask.actions; // export states\n\nexport default newTask.reducer;\nexport { newTask };\n/*\n\n\n\n\n\n*/\n\nexport const addNewTaskHandler = (dispatch, info) => {\n  console.log(info);\n  const payload = {\n    token: info.token,\n    companyID: info.companyID,\n    body: info.body\n  };\n  dispatch(addTask(payload)).then(unwrapResult).then(res => {\n    console.log(res.results);\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const convert2sec = str => {\n  const exactTime = str.toString().split('2022')[1].split('G')[0];\n  let myTime = exactTime.split(':');\n  let TimeInSec = myTime[0] * 60 * 60 + myTime[1] * 60 + myTime[2];\n  return parseInt(TimeInSec);\n};","map":{"version":3,"names":["createSlice","createAsyncThunk","unwrapResult","REQUEST_STATUS","Message","toaster","axios","addTask","payload","console","log","data","post","companyID","body","headers","Authorization","token","Accept","then","res","catch","err","response","initialState","userData","loading","status","error","newTask","name","keepUnusedDataFor","extraReducers","pending","state","PENDING","fulfilled","FULFILLED","rejected","REJECTED","setUsers","wasGoing","actions","reducer","addNewTaskHandler","dispatch","info","results","convert2sec","str","exactTime","toString","split","myTime","TimeInSec","parseInt"],"sources":["C:/Users/OSIOKE/Downloads/Sloovi/Sloovi - Copy/src/state/slices/action/newTask.js"],"sourcesContent":["import { createSlice, createAsyncThunk, unwrapResult } from '@reduxjs/toolkit';\nimport { REQUEST_STATUS } from '../constants';\nimport { Message, toaster } from 'rsuite';\nimport axios from 'axios';\n\nconst addTask = createAsyncThunk('post/addTask', async (payload) => {\n    console.log(payload);\n    const { data } = await axios\n        .post(\n            `https://stage.api.sloovi.com/task/lead_465c14d0e99e4972b6b21ffecf3dd691?company_id=${payload.companyID}`,\n\n            payload.body,\n            {\n                headers: {\n                    Authorization: 'Bearer ' + payload.token,\n                    'Content-Type': 'application/json',\n                    Accept: 'application/json',\n                },\n            }\n        )\n        .then((res) => {\n            console.log(res);\n            return res;\n        })\n        .catch((err) => {\n            console.log(err.response);\n            return err.data;\n        });\n\n    return data;\n});\n\nconst initialState = {\n    userData: {},\n    loading: false,\n    status: 'idle',\n    error: {},\n};\n\nconst newTask = createSlice({\n    name: 'xMartLogin',\n    initialState,\n    keepUnusedDataFor: 2,\n    extraReducers: {\n        [addTask.pending]: (state) => {\n            state.status = REQUEST_STATUS.PENDING;\n            state.loading = true;\n        },\n        [addTask.fulfilled]: (state, { payload }) => {\n            state.status = REQUEST_STATUS.FULFILLED;\n            state.userData = payload;\n            state.loading = false;\n        },\n        [addTask.rejected]: (state, error) => {\n            state.status = REQUEST_STATUS.REJECTED;\n            state.error = error;\n        },\n    },\n});\n\nexport const { setUsers, wasGoing } = newTask.actions;\n\n// export states\nexport default newTask.reducer;\nexport { newTask };\n\n/*\n\n\n\n\n\n*/\n\nexport const addNewTaskHandler = (dispatch, info) => {\n    console.log(info);\n    const payload = {\n        token: info.token,\n        companyID: info.companyID,\n        body: info.body,\n    };\n    dispatch(addTask(payload))\n        .then(unwrapResult)\n        .then((res) => {\n            console.log(res.results);\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n};\n\nexport const convert2sec = (str) => {\n    const exactTime = str.toString().split('2022')[1].split('G')[0];\n    let myTime = exactTime.split(':');\n    let TimeInSec = myTime[0] * 60 * 60 + myTime[1] * 60 + myTime[2];\n\n    return parseInt(TimeInSec);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}